<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABVSURBVDhP3ZBBCgAhDAP7dJ/WnymhNIigWKsXB4aFbZKD
        cot6KKml2E9VXeoZfFF0QgOdJDTgWRSdXwa6w9QhR3jYFR2rGuNh6dFA+g2eDwCGA2YRaQlxZA0EVja3
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="exit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        w3UAAAAASUVORK5CYII=
</value>
  </data>
</root>